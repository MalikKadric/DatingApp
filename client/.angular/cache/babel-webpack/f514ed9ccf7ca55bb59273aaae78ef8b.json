{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../_forms/text-input/text-input.component\";\nimport * as i5 from \"@angular/common\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(accountService, toastr) {\n      this.accountService = accountService;\n      this.toastr = toastr;\n      this.cancelRegister = new EventEmitter();\n      this.model = {};\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n    }\n\n    initializeForm() {\n      this.registerForm = new FormGroup({\n        username: new FormControl('Hello', Validators.required),\n        password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n        confirmPassword: new FormControl('', [Validators.required, this.matchValues('password')])\n      });\n      this.registerForm.controls.password.valueChanges.subscribe(() => {\n        this.registerForm.controls.confirmPassword.updateValueAndValidity();\n      });\n    }\n\n    matchValues(matchTo) {\n      return control => {\n        var _a;\n\n        return (control === null || control === void 0 ? void 0 : control.value) === ((_a = control === null || control === void 0 ? void 0 : control.parent) === null || _a === void 0 ? void 0 : _a.controls[matchTo].value) ? null : {\n          isMatching: true\n        };\n      };\n    }\n\n    register() {\n      console.log(this.registerForm.value);\n      /* this.accountService.register(this.model).subscribe(response => {\r\n       onsole.log(response);\r\n        this.cancel();\r\n      }, error => {\r\n        console.log(error);\r\n        this.toastr.error(error.error);\r\n      })*/\n    }\n\n    cancel() {\n      this.cancelRegister.emit(false);\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    outputs: {\n      cancelRegister: \"cancelRegister\"\n    },\n    decls: 17,\n    vars: 7,\n    consts: [[\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"text-primary\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"mr-2\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"app-text-input\");\n        i0.ɵɵtext(5, \"[formControl]='registerForm.controls[\\\"username\\\"]'[label]=\\\"\\\"\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_9_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(10, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"json\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\"Form value:\", i0.ɵɵpipeBind1(13, 3, ctx.registerForm.value), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Form value:\", i0.ɵɵpipeBind1(16, 5, ctx.registerForm.status), \"\");\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.TextInputComponent],\n    pipes: [i5.JsonPipe],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}